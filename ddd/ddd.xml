<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="ddd.xslt"?>
<ddd>
	<components>
		<component name="Сущность">
			Логически целостный объект, определяемый совокупностью индивидуальных черт, называется СУЩНОСТЬЮ ( ENTITY).
			Если объект определяется уникальным индивидуальным существованием, а не набором атрибутов, это свойство следует считать главным при определении объекта в модели.
			Определение класса должно быть простым и строиться вокруг непрерывности и уникальности цикла существования объекта.
			Найдите способ различать каждыйобъект независимо от его формы или истории существования.
			С особым вниманием отнеситесь к техническим требованиям, связанным с сопоставлением объектов по их атрибутам.
			Задайте операцию, которая бы обязательно давала неповторимый результат для каждого такого объекта, - возможно, для этого с объектом придется ассоциировать некий символ с гарантированной уникальностью.
			Такое средство идентификации может иметь внешнее происхождение, но это может быть и произвольный идентификатор, сгенерированный системой для ее собственного удобства.
			Однако такое средство должно соответствовать правилам различения объектов в модели. В модели должно даваться точное определение, что такое одинаковые объекты.
			Задавайте только те рабочие функции, которые существенны для создания понятия об объекте, и только те атрибуты, которых требуют эти функции.
			Все атрибуты и функции, которые выходят за эти рамки, старайтесь выносить в другие объекты, ассоциированные с главной СУЩНОСТЬЮ.
			Некоторые из них тоже будут СУЩНОСТЯМИ, а некоторые - ОБЪЕКТАМИ-ЗНАЧЕНИЯМИ (VALUE OBJECTS).
		</component>
		<component name="Объект-значение">
			Идентификация СУЩНОСТЕЙ - дело нужное, но выделение других видов объектов как индивидуально существующих может повредить быстродействию системы, добавить лишнюю аналитическую работу, ухудшить модель из-за того, что все объекты в ней приобретут одинаковый характер.
			Проектирование программного обеспечения - это постоянная битва за простоту. Нужно различать, когда что использовать, чтобы специальные приемы работы с объектами использовались только тогда, когда нужно. Однако если думать об этой категории объектов только как о безличности, отсутствии
			индивидуальности, то мы не добавим ничего нового в свой рабочий словарь или арсенал. На самом деле у таких объектов есть собственные характеристики, и они также значимы для модели. Это объекты , которые использ уются для описании пред метов и явлении.
			ОБЪЕКТОМ -3НАЧЕНИЕМ (VALUE OBJECT) называется объект, который представляет описательный аспект предметной области и не имеет индивидуального существования, собственной идентичности.
			Такие объекты создаются в программе для представления тех элементов проекта, о которых достаточно знать только, что они собой представляют, но не кем именно они ЯВЛЯЮТСЯ.
			ОБЪЕКТ-ЗНАЧЕНИЕ может представлять собой совокупность других объектов. В программах архитектурного проектирования жилых домов для любого стиля окон можно создать отдельный объект.
			Этот "стиль окна" можно инкорпорировать в объект "окно" наряду с атрибутами ширины и высоты, а также правилами изменения и комбинирования.
			Такие окна - сложные ОБЪЕКТЫ-ЗНАЧЕНИЯ, составленные из других ОБЪЕКТОВЗНАЧЕНИЙ. Они, в свою очередь, могут инкорпорироваться в еще большие составные элементы плана здания - например, объекты-"стены".
			ОБЪЕКТЫ-ЗНАЧЕНИЯ могут даже ссылаться на СУЩНОСТИ. Например, если я запрошу картографическую онлайн-службу проложить мне живописный маршрут из СанФранциско в Лос-Анджелес, то она может сгенерировать объект маршрут (Route), соединяющий эти два города по шоссе Pacific Coast Highway.
			Этот объект будет ЗНАЧЕНИЕМ, пусть даже все три объекта, на которые он ссылается (два города и шоссе), являютсяСУЩНОСТЯМИ.
			ОБЪЕКТЫ-ЗНАЧЕНИЯ часто передаются в качестве параметров в сообщениях между объектами. Нередко они носят временный характер - создаются для конкретной операции и тут же уничтожаются.
			ОБЪЕКТЫ-ЗНАЧЕНИЯ могут использоваться в виде атрибутов СУЩНОСТЕЙ (и других ЗНАЧЕНИЙ). Так, человек, в елом, может представляться индивидуальной СУЩНОСТЬЮ, но его имя будет ОБЪЕКТОМ-ЗНАЧЕНИЕМ.
			Если элемент модели полностью определяется своими атрибутами, то его следует считать ОБЪЕКТОМ-ЗНАЧЕНИЕМ.
			Сделайте так, чтобы он отражал смысл заложенных в него атрибутов и придайте ему соответствующую функциональность.
			Считайте такой объект неизменяющимся. Не давайте ему индивидуальности, вообще избегайте любых сложностей, неизбежных при программном управл ении СУЩНОСТЯМИ.
		</component>
		<component name="Сервис">

		</component>
		<component name="Агрегат">

		</component>
		<component name="Фабрика">

		</component>
		<component name="Хранилище">

		</component>

	</components>

</ddd>