{"version":3,"sources":["Tags.js","Preloader.js","gist/Gist.js","gist/GistTable.js","gist/GistContainer.js","book/DownloadCondition.js","book/DownloadBook.js","book/Book.js","book/BookTable.js","book/BookContainer.js","hotkeys/HotKeys.js","hotkeys/HotKeysTable.js","hotkeys/HotKeysContainer.js","App.js","serviceWorker.js","index.js"],"names":["Tags","props","state","selectedName","onSelectTag","bind","arrayTags","tag","this","push","key","Math","random","toString","substr","className","onClick","tags","sort","a","b","count","i","context","name","length","component","setState","onSelect","React","Component","Preloader","src","Gist","gist","names","split","resultName","href","url","rawUrl","description","GistTable","searchText","changeInput","isNameContains","clearSearch","gists","array","type","placeholder","value","onChange","e","target","sourceString","filterText","booleanContains","indexOf","arrayFindWords","trim","findWord","toLowerCase","GistContainer","isLoad","tableContext","knowledges","selectedType","nameTag","isLocal","window","location","hostname","port","axios","get","then","data","catch","err","console","log","DownloadCondition","selectedRadio","inputValue","onSelectedRadio","onInput","notifyChange","typeByRadio","text","defaultChecked","radio","notify","DownloadBook","startDownload","completeDownload","qr","condition","download","onChangeCondition","downloadComponent","ref","el","_login","_password","book","id","bookId","requestBody","login","password","conditionType","conditionValue","method","qs","stringify","headers","response","Book","isShowDownload","showDownload","icon","previewLink","alt","group","invert","BookTable","books","BookContainer","groupBy","tagsBook","grouped","k","v","list","keyGetter","map","Map","forEach","item","index","set","HotKey","hotKeys","trArray","items","element","HotKeysTable","hotKeysData","HotKeys","HotKeysContainer","tagsHotKeys","groups","App","role","aria-label","exact","activeStyle","borderBottomColor","color","to","path","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c7204e76.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Tags extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            selectedName: 'ALL'\n        }\n\n        this.onSelectTag = this.onSelectTag.bind(this);\n    }\n\n    render(){\n            let arrayTags = [];\n\n            let compareDesc = function compareDesc( a, b ) {\n              if ( a.count < b.count ){\n                return 1;\n              }\n              if ( a.count > b.count ){\n                return -1;\n              }\n              return 0;\n            }\n\n            let tag = this.state.selectedName === 'ALL' ? 'tag is-danger' : 'tag is-light';\n            arrayTags.push(\n              <div key={'_' + Math.random().toString(36).substr(2, 9)} className=\"control\">\n                <div className=\"tags has-addons\">\n                  <a className={tag} onClick={() => this.onSelectTag('ALL')}>{'ВСЕ'}</a>\n                </div>\n              </div>\n            );\n\n            this.props.tags.sort(compareDesc);\n\n            for(let i = 0; i < this.props.tags.length; i++){\n                let context = this.props.tags[i];\n\n                let tag = this.state.selectedName === context.name ? 'tag is-danger' : 'tag is-light';\n\n                arrayTags.push(\n                  <div key={i} className=\"control\">\n                    <div className=\"tags has-addons\">\n                      <a className={tag} onClick={() => this.onSelectTag(context.name)}>{context.name}</a>\n                      <span className=\"tag is-primary is-light\">{context.count}</span>\n                    </div>\n                  </div>\n                );\n            }\n\n            let component  = <div className=\"field is-grouped is-grouped-multiline\">\n             {arrayTags}\n           </div>;\n        return (\n              <section className=\"section\">\n                    {component}\n              </section>\n        );\n    }\n\n    onSelectTag(name){\n        this.setState({\n            selectedName: name\n        });\n        this.props.onSelect(name);\n    }\n\n}\n\nexport default Tags;","import React, {Component} from 'react';\n\nclass Preloader extends React.Component{\n\n    render(){\n        return (\n             <div className=\"container\">\n                <nav className=\"level\">\n                    <div className=\"level-item\">\n                        <figure className=\"image is-64x64 center\">\n                            <img src=\"preloader.gif\"/>\n                        </figure>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n\n}\n\nexport default Preloader;","import React, {Component} from 'react';\n\nclass Gist extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let gist = this.props.gist;\n\n       let name = gist.name;\n\n       let names = name.split('-');\n\n       let resultName = names.length > 1? names[1] : name;\n\n\n        return (\n                <div className=\"box\">\n                    <nav className=\"level\">\n                     <div className=\"level-left\">\n                       <div className=\"level-item\">\n                         <p className=\"subtitle is-5\">\n                           <strong>{resultName}</strong>\n                         </p>\n                       </div>\n                   </div>\n\n                     <div className=\"level-right\">\n                       <p className=\"level-item\"><a href={gist.url}>Открыть Gist</a></p>\n                       <p className=\"level-item\"><a href={gist.rawUrl}>Сырые данные</a></p>\n                     </div>\n                    </nav>\n\n\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\">\n                        <p>\n                           {gist.description}\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n        );\n    }\n}\n\nexport default Gist;","import React, {Component} from 'react';\nimport Gist from './Gist';\n\n\nclass GistTable extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            searchText: ''\n        }\n\n        this.changeInput = this.changeInput.bind(this);\n        this.isNameContains = this.isNameContains.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    }\n\n    render(){\n        let gists = this.props.gists;\n\n        let array = [];\n\n        for(let i = 0; i < gists.length; i++){\n            let gist = gists[i];\n\n            if(this.props.selectedName === gist.type || this.props.selectedName =='ALL'){\n                if(this.state.searchText !== '' && this.state.searchText.length > 2){\n                    let contains = this.isNameContains(gist.name, this.state.searchText);\n                    if(contains){\n                        array.push(\n                               <Gist gist={gist} key={'_' + Math.random().toString(36).substr(2, 9)}/>\n                        );\n                    }\n                } else {\n                    array.push(\n                           <Gist gist={gist} key={'_' + Math.random().toString(36).substr(2, 9)}/>\n                    );\n                }\n            }\n        }\n\n        return (\n          <section className=\"section\">\n            <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-11\">\n                    <input className=\"input\" type=\"text\" placeholder=\"Введите слово или слова через пробел\" value={this.state.searchText} onChange={this.changeInput}/>\n                </div>\n              <div className=\"column\">\n              <a className=\"button\" onClick={this.clearSearch}>Очистить</a>\n              </div>\n            </div>\n               {array}\n            </div>\n          </section>\n        );\n    }\n\n    changeInput(e){\n        this.setState({\n            searchText: e.target.value\n        });\n    }\n\n    clearSearch(){\n        this.setState({\n            searchText: ''\n        });\n    }\n\n    isNameContains(sourceString, filterText) {\n        var booleanContains = false;\n        if (filterText !== '') {\n            if (filterText.indexOf(' ') !== -1) {\n                //получаем массив слов\n                var arrayFindWords = filterText.trim().split(' ');\n                booleanContains = true;\n                for (let findWord in arrayFindWords) {\n                    if (findWord !== '') {\n                        if (sourceString.indexOf(arrayFindWords[findWord]) === -1) {\n                            booleanContains = false;\n                            break;\n                        }\n                    }\n                }\n            } else {\n                booleanContains =\n                    sourceString\n                        .toLowerCase()\n                        .indexOf(filterText.toLowerCase()) !== -1;\n            }\n        } else {\n            booleanContains = true;\n        }\n\n        return booleanContains;\n    }\n}\n\nexport default GistTable;","import React, {Component} from 'react';\nimport Tags from '../Tags';\nimport Preloader from '../Preloader';\nimport GistTable from './GistTable';\nimport axios from 'axios';\n\n\nclass GistContainer extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state= {\n            isLoad: true,\n            tableContext: [],\n            knowledges: [],\n            selectedType: 'ALL'\n        }\n\n        this.onSelectTag = this.onSelectTag.bind(this);\n    }\n\n    render(){\n\n    let component;\n\n             if(this.state.isLoad){\n                component = <Preloader/>\n\n\n\n             } else {\n               component =\n                   <div className=\"container\">\n                       <Tags tags={this.state.tableContext} onSelect={this.onSelectTag}/>\n                       <GistTable gists={this.state.knowledges} selectedName={this.state.selectedType}/>\n                   </div>;\n             }\n        return (\n          <section className=\"section\">\n                {component}\n          </section>\n        );\n    }\n\n    onSelectTag(nameTag){\n        this.setState({\n            selectedType: nameTag\n        });\n    }\n\n    async componentDidMount() {\n        var isLocal = (window.location.hostname === 'localhost' && window.location.port === '3000');\n        let url;\n        if(isLocal){\n            url = 'gists.json';\n        } else {\n            url = 'https://prog-tools.ru:64646/knowledges';\n        }\n\n        axios.get(url)\n            .then(data => {\n                this.setState({\n                    isLoad: false,\n                    tableContext: data.data.tableContext,\n                    knowledges: data.data.knowledges\n                });\n\n            })\n            .catch(err => console.log(err));\n    }\n}\n\nexport default GistContainer;","import React, {Component} from 'react';\n\nclass DownloadCondition extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            selectedRadio: 'countRadio',\n            inputValue: ''\n        }\n        this.onSelectedRadio = this.onSelectedRadio.bind(this);\n        this.onInput = this.onInput.bind(this);\n        this.notifyChange = this.notifyChange.bind(this);\n        this.typeByRadio = this.typeByRadio.bind(this);\n    }\n\n    render(){\n\n        let text = '';\n\n        if (this.state.selectedRadio ==='countRadio'){\n            text = \"Введите допустимое количество скачиваний\";\n        } else if(this.state.selectedRadio==='timeRadio'){\n            text = \"Введите допустимое время доступа в формате число_(s - секунды | m - минуты | h - часы)\";\n        } else if(this.state.selectedRadio==='dateRadio'){\n            text = \"Введите дату до которой будет предоставлен доступ в формате 'YYYY-MM-DD HH:mm:ss'\";\n        }\n\n        return (\n            <div className=\"section\">\n\n            <h2 className=\"subtitle\">Ограничение на скачивание</h2>\n                <div className=\"container\">\n                    <div className=\"level\">\n                        <div className=\"level-item\">\n                            <div className=\"field\">\n                              <div className=\"control\">\n                                <label className=\"radio\">\n                                  <input type=\"radio\" name=\"type\" onClick={this.onSelectedRadio} defaultChecked={this.state.selectedRadio === 'countRadio'} value=\"countRadio\"/>\n                                  Количество скачиваний\n                                </label>\n                                <label className=\"radio\">\n                                  <input type=\"radio\" name=\"type\" onClick={this.onSelectedRadio} defaultChecked={this.state.selectedRadio === 'timeRadio'} value=\"timeRadio\"/>\n                                  Время\n                                </label>\n                                <label className=\"radio\">\n                                  <input type=\"radio\" name=\"type\" onClick={this.onSelectedRadio} defaultChecked={this.state.selectedRadio === 'dateRadio'} value=\"dateRadio\"/>\n                                  Дата\n                                </label>\n                              </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div>{text}</div>\n                    <div className=\"field\">\n                      <div className=\"control\">\n                        <input className=\"input\" type=\"text\" placeholder={text} onChange={this.onInput}/>\n                      </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    onSelectedRadio(e){\n        let type = this.typeByRadio(e.target.value);\n\n        this.notifyChange(\n            type,\n            this.state.inputValue\n        );\n\n        this.setState({\n            selectedRadio: e.target.value\n        });\n\n    }\n\n    typeByRadio(radio){\n       return  radio === 'countRadio' ? 'count' : radio === 'timeRadio' ? 'time' : 'date';\n    }\n\n    onInput(e){\n        this.notifyChange(\n            this.typeByRadio(this.state.selectedRadio),\n            e.target.value\n        );\n\n        this.setState({\n            inputValue: e.target.value\n        });\n    }\n\n    notifyChange(type, value){\n        let notify = {\n            type: type,\n            value: value\n        }\n\n        console.log(notify);\n\n        this.props.onChange(notify);\n    }\n\n}\n\nexport default DownloadCondition;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport Preloader from '../Preloader';\nimport DownloadCondition from './DownloadCondition';\n\n\nclass DownloadBook extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            startDownload: false,\n            completeDownload: false,\n            url: '',\n            qr: '',\n            condition: {type: 'count', value: '1'}\n        }\n\n        var self = this;\n\n        this.download = this.download.bind(this);\n        this.onChangeCondition = this.onChangeCondition.bind(this);\n    }\n\n     render(){\n        let downloadComponent;\n\n        if (this.state.completeDownload && !this.state.startDownload){\n            downloadComponent = <div>\n                <div className=\"level\">\n                    <div className=\"level-item\">\n                        <figure className=\"image is-128x128\">\n                          <img src={this.state.qr}/>\n                        </figure>\n\n                    </div>\n                </div>\n                <div className=\"level\">\n                    <div className=\"level-item\">\n                        <a href={this.state.url}>Скачать</a>\n                    </div>\n                </div>\n\n            </div>\n        }\n\n        return (\n              <section className=\"section\">\n                <div className=\"container\">\n                  <h1 className=\"title\">Скачать</h1>\n                    <div className=\"field\">\n                      <div className=\"control\">\n                        <input className=\"input\" type=\"text\" placeholder=\"Логин\" ref={(el) => this._login = el}/>\n                      </div>\n                    </div>\n                    <div className=\"field\">\n                      <div className=\"control\">\n                        <input className=\"input\" type=\"password\" placeholder=\"Пароль\" ref={(el) => this._password = el}/>\n                      </div>\n                    </div>\n\n                    <DownloadCondition onChange={this.onChangeCondition}/>\n\n                      <div className=\"control\">\n                        <button className=\"button is-link\" onClick={() => this.download(this.props.book.id)}>Скачать</button>\n                      </div>\n                </div>\n                <div className=\"container\">\n                    {this.state.startDownload ? <Preloader/> : downloadComponent}\n                </div>\n              </section>\n        )\n     }\n\n     onChangeCondition(condition){\n        console.log(condition);\n\n        this.setState({\n            condition: condition\n        });\n     }\n\n    async download(bookId) {\n        this.setState({\n            startDownload: true,\n        });\n\n        const requestBody = {\n          id: bookId,\n          login: this._login.value,\n          password: this._password.value,\n          conditionType: this.state.condition.type,\n          conditionValue:this.state.condition.value\n        }\n\n         axios({\n            method: 'post',\n            url: 'https://prog-tools.ru:8445/library/rest/books/book/link',\n            data: qs.stringify(requestBody),\n            headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' }\n            })\n            .then(response => {\n                this.setState({\n                    startDownload: false,\n                    completeDownload: true,\n                    url: response.data.url,\n                    qr: response.data.qr,\n                });\n            })\n            .catch(function (response) {\n                console.log(response);\n            });\n\n            }\n        }\n\nexport default DownloadBook;","import React, {Component} from 'react';\nimport DownloadBook from './DownloadBook';\n\nclass Book extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isShowDownload: false\n        }\n        this.showDownload = this.showDownload.bind(this);\n    }\n\n    render(){\n        let book = this.props.book;\n\n       let name = book.name;\n\n       let names = name.split('-');\n\n       let resultName = names.length > 1? names[1] : name;\n\n        let downloadComponent = this.state.isShowDownload ? <DownloadBook book={book}/> : ''\n\n        let icon =<div key={'_' + Math.random().toString(36).substr(2, 9)} className=\"media-right\">\n                <span className=\"icon is-large\" onClick={this.showDownload}>\n                    <span className={this.state.isShowDownload ? 'fas fa-angle-up' : 'fas fa-angle-down'}></span>\n                </span>\n            </div>\n\n        return (\n                <div className=\"box\">\n                    <div className=\"media\">\n                      <div className=\"media-left\">\n                        <figure className=\"image\">\n                          <img src={book.previewLink} alt=\"Placeholder image\"/>\n                        </figure>\n                      </div>\n                      <div className=\"media-content\">\n                        <p className=\"title is-4\">{book.name}</p>\n                        <p className=\"subtitle is-6\">{book.group}</p>\n                      </div>\n                      <div className=\"media-right\">\n                      {icon}\n                      </div>\n                    </div>\n                   {downloadComponent}\n                </div>\n        );\n    }\n\n    showDownload(){\n        let invert = !this.state.isShowDownload;\n\n        this.setState({\n            isShowDownload : invert\n        });\n    }\n}\n\nexport default Book;","import React, {Component} from 'react';\nimport Book from './Book';\n\n\nclass BookTable extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            searchText: ''\n        }\n\n        this.changeInput = this.changeInput.bind(this);\n        this.isNameContains = this.isNameContains.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    }\n\n    render(){\n        let books = this.props.books;\n\n        let array = [];\n\n        for(let i = 0; i < books.length; i++){\n            let book = books[i];\n\n            if(this.props.selectedName === book.group || this.props.selectedName =='ALL'){\n                if(this.state.searchText !== '' && this.state.searchText.length > 2){\n                    let contains = this.isNameContains(book.name, this.state.searchText);\n                    if(contains){\n                        array.push(\n                               <Book book={book} key={'_' + Math.random().toString(36).substr(2, 9)}/>\n                        );\n                    }\n                } else {\n                    array.push(\n                           <Book book={book} key={'_' + Math.random().toString(36).substr(2, 9)}/>\n                    );\n                }\n            }\n        }\n\n        return (\n          <section className=\"section\">\n            <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-11\">\n                    <input className=\"input\" type=\"text\" placeholder=\"Введите слово или слова через пробел\" value={this.state.searchText} onChange={this.changeInput}/>\n                </div>\n              <div className=\"column\">\n              <a className=\"button\" onClick={this.clearSearch}>Очистить</a>\n              </div>\n            </div>\n               {array}\n            </div>\n          </section>\n        );\n    }\n\n    changeInput(e){\n        this.setState({\n            searchText: e.target.value\n        });\n    }\n\n    clearSearch(){\n        this.setState({\n            searchText: ''\n        });\n    }\n\n    isNameContains(sourceString, filterText) {\n        var booleanContains = false;\n        if (filterText !== '') {\n            if (filterText.indexOf(' ') !== -1) {\n                //получаем массив слов\n                var arrayFindWords = filterText.trim().split(' ');\n                booleanContains = true;\n                for (let findWord in arrayFindWords) {\n                    if (findWord !== '') {\n                        if (sourceString.indexOf(arrayFindWords[findWord]) === -1) {\n                            booleanContains = false;\n                            break;\n                        }\n                    }\n                }\n            } else {\n                booleanContains =\n                    sourceString\n                        .toLowerCase()\n                        .indexOf(filterText.toLowerCase()) !== -1;\n            }\n        } else {\n            booleanContains = true;\n        }\n\n        return booleanContains;\n    }\n}\n\nexport default BookTable;","import React, {Component} from 'react';\nimport Tags from '../Tags';\nimport BookTable from './BookTable';\nimport Preloader from '../Preloader';\nimport axios from 'axios';\n\n\nclass BookContainer extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state= {\n            isLoad: true,\n            books: [],\n            selectedType: 'ALL'\n        }\n\n        this.onSelectTag = this.onSelectTag.bind(this);\n        this.groupBy = this.groupBy.bind(this);\n    }\n\n    render(){\n\n    let component;\n\n             if(this.state.isLoad){\n                component = <Preloader/>\n             } else {\n\n                let books = this.state.books;\n                let tagsBook = [];\n\n                const grouped = this.groupBy(books, book => book.group);\n                for (let [k, v] of grouped) {\n                  tagsBook.push({name: k, count: v});\n                }\n\n               component =\n                   <div className=\"container\">\n                       <Tags tags={tagsBook} onSelect={this.onSelectTag}/>\n                       <BookTable books={this.state.books} selectedName={this.state.selectedType}/>\n                   </div>;\n             }\n        return (\n          <section className=\"section\">\n                {component}\n          </section>\n        );\n    }\n\n    onSelectTag(nameTag){\n        this.setState({\n            selectedType: nameTag\n        });\n    }\n\n    async componentDidMount() {\n        var isLocal = (window.location.hostname === 'localhost' && window.location.port === '3000');\n        let url;\n        if(isLocal){\n            url = 'books.json';\n        } else {\n            url = 'https://prog-tools.ru:8445/library/rest/books';\n        }\n\n        axios.get(url)\n            .then(data => {\n                this.setState({\n                    isLoad: false,\n                    books: data.data.books,\n                });\n\n            })\n            .catch(err => console.log(err));\n    }\n\n    groupBy(list, keyGetter) {\n        const map = new Map();\n        list.forEach((item) => {\n             const key = keyGetter(item);\n             let index = map.get(key);\n             if (!index) {\n                 map.set(key, 1);\n             } else {\n                map.set(key, ++index);\n             }\n        });\n        return map;\n    }\n}\n\nexport default BookContainer;","import React, {Component} from 'react';\n\nclass HotKey extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render (){\n        let hotKeys = this.props.hotKeys;\n\n        let trArray = [];\n\n        hotKeys.items.forEach(element => {\n            trArray.push(\n                <tr key={'_' + Math.random().toString(36).substr(2, 9)}>\n                  <td>{element.key}</td>\n                  <td>{element.value}</td>\n                </tr>\n            );\n        });\n\n        return (\n           <div className=\"box\">\n                <nav className=\"level\">\n                    <div className=\"level-item\">\n                    <p className=\"subtitle is-5\">\n                            <strong>{hotKeys.name}</strong>\n                          </p>\n                    </div>\n                </nav>\n                <table className=\"table is-fullwidth\">\n                  <tbody>\n                    {trArray}\n                  </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default HotKey;","import React, {Component} from 'react';\nimport HotKeys from './HotKeys';\n\n\nclass HotKeysTable extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            searchText: ''\n        }\n    }\n\n    render(){\n        let hotKeys = this.props.hotKeys;\n\n        let array = [];\n\n        for(let i = 0; i < hotKeys.length; i++){\n            let hotKeysData = hotKeys[i];\n\n            if(this.props.selectedName === hotKeysData.name || this.props.selectedName =='ALL'){\n                array.push(\n                       <HotKeys hotKeys={hotKeysData} key={'_' + Math.random().toString(36).substr(2, 9)}/>\n                );\n            }\n        }\n        return (\n          <section className=\"section\">\n            <div className=\"container\">\n               {array}\n            </div>\n          </section>\n        );\n    }\n}\n\nexport default HotKeysTable;","import React, {Component} from 'react';\nimport Tags from '../Tags';\nimport Preloader from '../Preloader';\nimport HotKeysTable from './HotKeysTable';\nimport axios from 'axios';\n\n\nclass HotKeysContainer extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state= {\n            isLoad: true,\n            hotKeys: [],\n            selectedType: 'ALL'\n        }\n\n        this.onSelectTag = this.onSelectTag.bind(this);\n        this.groupBy = this.groupBy.bind(this);\n    }\n\n    render(){\n        let component;\n\n         if(this.state.isLoad){\n            component = <Preloader/>\n         } else {\n             let tagsHotKeys = [];\n\n            this.state.hotKeys.forEach(element => tagsHotKeys.push({name: element.name, count: element.items.length}))\n\n            component =\n               <div className=\"container\">\n                   <Tags tags={tagsHotKeys} onSelect={this.onSelectTag}/>\n                   <HotKeysTable hotKeys={this.state.hotKeys} selectedName={this.state.selectedType}/>\n               </div>;\n         }\n\n        return (\n          <section className=\"section\">\n                {component}\n          </section>\n        )\n    }\n\n    onSelectTag(nameTag){\n        this.setState({\n            selectedType: nameTag\n        });\n    }\n\n    async componentDidMount() {\n        var isLocal = (window.location.hostname === 'localhost' && window.location.port === '3000');\n        let url;\n        if(isLocal){\n            url = 'hotkeys.json';\n        } else {\n            url = 'https://raw.githubusercontent.com/ezhov-da/hot-keys/master/hot-keys.json';\n        }\n\n        axios.get(url)\n            .then(data => {\n                this.setState({\n                    isLoad: false,\n                    hotKeys: data.data.groups\n                });\n\n            })\n            .catch(err => console.log(err));\n    }\n\n    groupBy(list, keyGetter) {\n        const map = new Map();\n        list.forEach((item) => {\n             const key = keyGetter(item);\n             let index = map.get(key);\n             if (!index) {\n                 map.set(key, 1);\n             } else {\n                map.set(key, ++index);\n             }\n        });\n        return map;\n    }\n}\n\nexport default HotKeysContainer;","import React, {Component} from 'react';\nimport GistContainer from './gist/GistContainer';\nimport BookContainer from './book/BookContainer';\nimport HotKeysContainer from './hotkeys/HotKeysContainer';\n\nimport {\n    Route,\n    NavLink,\n    HashRouter\n} from 'react-router-dom';\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n      return (\n      <HashRouter>\n        <div className=\"container\">\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n              <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"https://github.com/ezhov-da\">\n                 ezhov-da\n                </a>\n              </div>\n            </nav>\n\n            <div className=\"tabs is-centered\">\n\n              <ul>\n                <li><NavLink exact={true} activeStyle={{borderBottomColor: \"#3273dc\", color: \"#3273dc\"}} to=\"/\">Мои Gist</NavLink></li>\n                <li><NavLink activeStyle={{borderBottomColor: \"#3273dc\", color: \"#3273dc\"}} to=\"/books\">Книги</NavLink></li>\n                <li><NavLink activeStyle={{borderBottomColor: \"#3273dc\", color: \"#3273dc\"}} to=\"/hotkeys\">Команды</NavLink></li>\n              </ul>\n            </div>\n\n            <div>\n                <Route exact={true} path=\"/\" component={GistContainer}/>\n                <Route path=\"/books\" component={BookContainer}/>\n                <Route path=\"/hotkeys\" component={HotKeysContainer}/>\n            </div>\n        </div>\n        </HashRouter>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}